gsub(
pattern = " ",
replacement = "",
x = .,
fixed = TRUE
)
wkt_text
eval(parse(text = wkt_text %>%
# gsub(
#   pattern = "\\\"",
#   replacement = "",
#   x = .
# ) %>% %>%
gsub(
pattern = "PARAMETER\\[",
replacement = "",
x = .
) %>%
gsub(
pattern = "\\[",
replacement = " = ",
x = .
) %>%
gsub(
pattern = "\\]",
replacement = ")",
x = .
) %>%
gsub(
pattern = "\\/",
replacement = "",
x = .
) %>%
gsub(
pattern = " ",
replacement = "",
x = .,
fixed = TRUE
)
))
eval(parse(text = wkt_text %>%
# gsub(
#   pattern = "\\\"",
#   replacement = "",
#   x = .
# ) %>% %>%
gsub(
pattern = "PARAMETER\\[",
replacement = "",
x = .
) %>%
gsub(
pattern = "\\[",
replacement = " = list(",
x = .
) %>%
gsub(
pattern = "\\]",
replacement = ")",
x = .
) %>%
gsub(
pattern = "\\/",
replacement = "",
x = .
) %>%
gsub(
pattern = " ",
replacement = "",
x = .,
fixed = TRUE
)
))
wkt_text %>%
# gsub(
#   pattern = "\\\"",
#   replacement = "",
#   x = .
# ) %>% %>%
gsub(
pattern = "PARAMETER\\[",
replacement = "",
x = .
) %>%
gsub(
pattern = "\\[",
replacement = " = list(",
x = .
) %>%
gsub(
pattern = "\\]",
replacement = ")",
x = .
) %>%
gsub(
pattern = "\\/",
replacement = "",
x = .
) %>%
gsub(
pattern = " ",
replacement = "",
x = .,
fixed = TRUE
)
wkt_text
crs_data
ssub(pattern = ".*False easting",
"", wkt_text))
ssub(pattern = ".*False easting",
"", wkt_text)
sub(pattern = ".*False easting",
"", wkt_text)
gsub(pattern = ".*False easting",
"", wkt_text)
gsub(pattern = ".*False easting,*,",
"", wkt_text)
no_quotes <- wkt_text %>%
gsub(
pattern ="\\\"",
sub="",
x=.
)
no_quotes <- wkt_text %>%
gsub(
pattern ="\\\"",
sub="",
x= .
)
no_quotes <- wkt_text %>%
gsub(
pattern ="\\\"",
replacement = ="",
x= .
)
no_quotes <- wkt_text %>%
gsub(
pattern ="\\\"",
replacement ="",
x= .
)
no_quotes
gsub(pattern = ".*False easting,*,",
"", no_quotes)
gsub(pattern = ".*False easting,*,",
"", no_quotes) %>%
gsub(pattern=",*$",
replacement = "",
x = .)
gsub(pattern = ".*False easting,*,",
"", no_quotes) %>%
gsub(pattern=",*",
replacement = "",
x = .)
gsub(pattern = ".*False easting,*,",
"", no_quotes) %>%
gsub(pattern=",.*",
replacement = "",
x = .)
gsub(pattern = ".*False easting,",
"", no_quotes) %>%
gsub(pattern=",.*",
replacement = "",
x = .)
gsub(pattern = ".*False easting,*.,.*",
"", no_quotes)
gsub(pattern = ".*False easting,",
"", no_quotes)
gsub(pattern = ".*False easting,",
"", no_quotes) %>%
gsub(pattern=",.*",
replacement = "",
x = .)
if(require(glue))
{print("as")}
search_string = "False easting"
pattern = paste0(".*", search_string, ",")
pattern
"1" *1
get_variable_from_wtk <- function(search_string, wkt_text, numeric = FALSE){
pattern <-  paste0(".*", search_string, ",")
wkt_value <- wkt_text %>%
gsub(
pattern = pattern,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("False easting", wkt_text, TRUE)
get_variable_from_wtk("False easting", wkt_text, FALSE)
pattern
get_variable_from_wtk <- function(search_string, wkt_text, numeric = FALSE){
pattern2 <-  paste0(".*", search_string, ",")
wkt_value <- wkt_text %>%
gsub(
pattern = pattern2,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("False easting", wkt_text, FALSE)
no_quotes
get_variable_from_wtk <- function(search_string, wkt_text, numeric = FALSE){
pattern2 <-  paste0(".*", search_string, ",")
wkt_value <- wkt_text %>%
gsub(
pattern = "\\\"",
replacement = "",
x = .
)
gsub(
pattern = pattern2,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("False easting", wkt_text, FALSE)
get_variable_from_wtk <- function(search_string, wkt_text, numeric = FALSE){
pattern2 <-  paste0(".*", search_string, ",")
wkt_value <- wkt_text %>%
gsub(
pattern = "\\\"",
replacement = "",
x = .
) %>%
gsub(
pattern = pattern2,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("False easting", wkt_text, FALSE)
get_variable_from_wtk("False easting", wkt_text, TRUE)
source('C:/DATEN/02 R Code/01 Packages/rPALM/R/supplementary_functions.R', echo=TRUE)
crs_data
crs_data$wkt
get_variable_from_wtk(
"False northing",
crs_data$wkt,
TRUE
)
#' Title
#'
#' @param search_string Character. Which parameter to search in wkt string
#' @param wkt_text Character. Wkt string
#' @param numeric Boolean. Whether value is numeric or not
#'
#' @return
#' @export
#'
#' @examples
get_variable_from_wtk <- function(search_string, wkt_text, numeric = TRUE){
pattern2 <-  paste0(".*", search_string, ",")
wkt_value <- wkt_text %>%
gsub(
pattern = "\\\"",
replacement = "",
x = .
) %>%
gsub(
pattern = pattern2,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt)
get_variable_from_wtk("GRS 1980", crs_data$wkt)
get_variable_from_wtk(get_variable_from_wtk("GRS 1980", crs_data$wkt), crs_data$wkt)
crs_data <- st_crs(epsg_code)
if (any(names(self$data) == "crs")) {
print("Crs available. OVerwriting!")
self$data$crs <- NULL
}
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk("GRS 1980", crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk("GRS 1980", crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
adata
sf::sf_proj_info(crs_data)
st_crs(25832)
st_crs(25832)$proj4string
crs_data$proj4string
dd <- data.frame(x = 233760:233770, y= 5791758:5791778)
expand.grid(1:5, 1:4)
dd <- expand.grid(233760:233770, 5791758:5791778)
qq <- sf::st_as_sf(dd, coords = c("Var1", "Var2")) %>%
st_set_crs(25833)
qq
length(qq)
qq <- sf::st_as_sf(dd, coords = c("Var1", "Var2")) %>%
st_set_crs(25833) %>%
st_transform(4326)
qq
as.data.frame(qq)
qq %>% st_coordinates()
epsg_code
epsg_code <- 32651
crs_data <- st_crs(epsg_code)
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk("GRS 1980", crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk("GRS 1980", crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
crs_data$wkt
get_variable_from_wtk("False easting", crs_data$wkt)
get_variable_from_wtk("GRS 1980", crs_data$wkt)
ellipsoid_def <- "GRS 1980"
check_ellipsoid <- is.na(get_variable_from_wtk(ellipsoid_def, crs_data$wkt))
is.na(get_variable_from_wtk(ellipsoid_def, crs_data$wkt))
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk("GRS 1980", crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk("GRS 1980", crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk(ellipsoid_def, crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk(ellipsoid_def, crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
ignore.ellipsoid_def
ellipsoid_def
ellipsoid_def <- "GRS 1980"
check_ellipsoid <- is.na(get_variable_from_wtk(ellipsoid_def, crs_data$wkt))
if(check_ellipsoid){
ellipsoid_def <- "WGS 84"
}
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk(ellipsoid_def, crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk(ellipsoid_def, crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
crs_data$wkt
#' Title
#'
#' @param search_string Character. Which parameter to search in wkt string
#' @param wkt_text Character. Wkt string
#' @param numeric Boolean. Whether value is numeric or not
#'
#' @return
#' @export
#'
#' @examples
get_variable_from_wtk <- function(search_string, wkt_text, numeric = TRUE, trailing_comma = TRUE){
trail = ""
if(trailing_comma){
trail = ","
}
pattern2 <-  paste0(".*", search_string, trail)
wkt_value <- wkt_text %>%
gsub(
pattern = "\\\"",
replacement = "",
x = .
) %>%
gsub(
pattern = pattern2,
replacement = "",
x = .
) %>%
gsub(
pattern = ",.*",
replacement = "",
x = .
)
if(numeric){
wkt_value <- as.numeric(wkt_value)
}
return(wkt_value)
}
get_variable_from_wtk("ELLIPSOID\\[", crs_data$wkt, FALSE, FALSE)
adata <- list(
"long_name" = "coordinate reference system",
"grid_mapping_name" = "transverse_mercator",
"longitude_of_prime_meridian" = 0.0,
"longitude_of_central_meridian" = get_variable_from_wtk("Longitude of natural origin", crs_data$wkt),
"scale_factor_at_central_meridian" = get_variable_from_wtk("Scale factor at natural origin", crs_data$wkt),
"latitude_of_projection_origin" = get_variable_from_wtk("Latitude of natural origin", crs_data$wkt),
"false_easting" = get_variable_from_wtk("False easting", crs_data$wkt),
"false_northing" = get_variable_from_wtk("False northing", crs_data$wkt),
"semi_major_axis" = get_variable_from_wtk(ellipsoid_def, crs_data$wkt),
"inverse_flattening" = get_variable_from_wtk(get_variable_from_wtk(ellipsoid_def, crs_data$wkt), crs_data$wkt),
"units" = "m",
"epsg_code" = epsg_code,
"vals" = 0,
"type" = "integer"
)
devtools::document()
rm(list=ls())
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(rPALM)
library(rPALM)
git add *
library(updater)
library(installr)
library(rPALM)
library(rPALM)
library(rPALM)
library(rPALM)
dim(c(1))
library(rPALM)
library(rPALM)
library(rPALM)
library(rPALM)
24*3600
library(rPALM)
library(rPALM)
library(rPALM)
library(rPALM)
