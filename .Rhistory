plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot <- berlin_gras
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot <- bl2
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
berlin_gras <- berlin$data$zt$vals
berlin_gras[is.na(berlin$data$vegetation_type$vals)] <- 0
data_plot <- berlin_gras
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot <- bl2
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
rayshader::save_obj(filename = "berlin_ralf.obj")
berlin$plot_area()
berlin$plotcntr
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(berlin$savedplots[[1]]) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
plot_gg(berlin$savedplots[[1]])
img <-imager::load.image("berlin_ralf_1.png")
img <- imager::resize(img, 1000,1000)
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(img) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
class(img)
as.array(img)
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img)) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,])) %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot[,ncol(data_plot):1] %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
data_plot[,nrow(data_plot):1] %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
col(matri(c(2,2),2))
col(matrix(c(2,2),2))
row(matrix(c(2,2),2))
nrow(matrix(c(2,2),2))
ncol(matrix(c(2,2),2))
matrix(c(2,2),2)
nrow(data_plot):1
matrix(c(2,2),2)
matrix(c(2,2),2)[1,]
data_plot[nrow(data_plot):1,] %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
plot_2d(data_plot)
plot_2d(data_plot[nrow(data_plot):1,])
dat <- data_plot[ncol(data_plot):1,]
dat %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
img <- imager::rotate_xy(img, 180)
img <- imager::rotate_xy(img, 180, cx = 500, cy = 500)
dat %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
img <- imager::mirror(img, x)
img <-imager::load.image("berlin_ralf_1.png")
img <- imager::resize(img, 1000,1000)
img <- imager::mirror(img, axis = "x")
dat %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
img <-imager::load.image("berlin_ralf_1.png")
img <- imager::resize(img, 1000,1000)
img <- imager::mirror(img, axis = "y")
dat %>%
sphere_shade(texture = create_texture( pave_col, pave_col,  pave_col,  pave_col,  pave_col)) %>%
add_shadow(ray_shade(data_plot, zscale = 1, maxsearch = 300), 0.5) %>%
#  add_shadow(ambient_shade(data_plot), 0.5) %>%
add_overlay(as.array(img[,,1,]), alphacolor = "white") %>%
plot_3d(data_plot, zscale = 1, fov = 0, theta = 135, zoom = 0.75, phi = 45,
windowsize = c(1000, 800), solid = F)
rayshader::save_obj(filename = "berlin_ralf_gg.obj")
rayshader::save_obj(filename = "berlin_ralf_gg.obj",save_texture = T)
library(rgl)
save_obj
berlin$generate_lad_single_trees(ext_tree_type = 1, ext_tree_height = tree_height,
ext_crown_diameter = tree_crown)
table(tree_crown)
ncfile <- nc_open("Berlin_trees_crown_1m_DLR.nc")
tree_crown <- ncvar_get(ncfile,"Band1", start=c(x0,y0), count = c(1000,1000))
nc_close(ncfile)
table(tree_crown)
tree_crown[!is.na(tree_crown)] <- 5
th <- palm_ncdf_data_template$new(dat_name = "tree_height",FillValue = -9999.9,d_units = "m",
longname = "tree height", d_source = "dlr", lod = 1,
data = tree_height, dimensions = c("x", "y"), d_type = "float")
berlin$add_R6_data(th)
berlin$generate_lad_single_trees(ext_tree_type = 1, ext_tree_height = tree_height,
ext_crown_diameter = tree_crown)
table(tree_height)
dim(self$data$lad$vals)[3] < dim(lad_temp)[3]
library(rPALM)
devtools::documdocument()
devtools::document()
library(rPALM)
library(rPALM)
dat <- list(company1 = structure(list(financialVariable = c("Ventas Cliente",
"Revenue\n\200", "Expenditure\n\200", "Profit (Loss)\n\200"),
`2019` = c("98716127", "987,161", "890,623", "96,538"), `2020` = c("1477902",
"1,477,902", "1,337,031", "140,871"), `2021` = c("1970536",
"1,970,536", "1,732,873", "237,663"), `2022` = c("2955805",
"2,955,805", "2,569,122", "386,683"), `2023` = c("4433708",
"4,433,708", "3,829,434", "604,274")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("Expenditure\n\200",
"Profit (Loss)\n\200", "Revenue\n\200", "Ventas Cliente"), .rows = structure(list(
3L, 4L, 2L, 1L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")), company11 = structure(list(financialVariable = c("B2C and B2B Sales",
"Revenue\nCHF", "Expenditure\nCHF", "Profit (Loss)\nCHF"), `2019` = c("2",
"69,000", "187,000", "-118,000"), `2020` = c("2", "170,000",
"556,000", "-386,000"), `2021` = c("2", "506,000", "1,102,000",
"-596,000"), `2022` = c("2", "1,269,000", "2,013,000", "-744,000"
), `2023` = c("2", "3,110,000", "3,761,000", "-651,000")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("B2C and B2B Sales",
"Expenditure\nCHF", "Profit (Loss)\nCHF", "Revenue\nCHF"), .rows = structure(list(
1L, 3L, 4L, 2L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")), company7 = structure(list(financialVariable = c("0",
"Revenue\nÂ£", "Expenditure\nÂ£", "Profit (Loss)\nÂ£"), `2019` = c("0",
"0", "0", "0"), `2020` = c("0", "0", "0", "0")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("0", "Expenditure\nÂ£",
"Profit (Loss)\nÂ£", "Revenue\nÂ£"), .rows = structure(list(1L,
3L, 4L, 2L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")))
library(dplyr)
library(tidyverse)
dat %>% lapply(., function(x)[
x %>%
mutate(currency = str_extract(.,"\\\n"))
])
dat %>% map(., function(x)[
x %>%
mutate(currency = str_extract(.,"\\\n"))
])
dat %>% map(., function(x){
x %>%
mutate(currency = str_extract(.,"\\\n"))
})
dat %>% lapply(., function(x){
x %>%
mutate(currency = str_extract(.,"\\\n"))
})
x %>%
mutate(currency = str_extract(.$financialVariable,"\\\n"))
dat %>% lapply(., function(x){
x %>%
mutate(currency = str_extract(.$financialVariable,"\\\n"))
})
dat %>% lapply(., function(x){
x %>%
mutate(currency = str_extract(.$financialVariable,"\n"))
})
dat %>% map(., function(x){
x %>%
mutate(currency = str_extract(.$financialVariable,"\n"))
})
dat %>% map(., function(x){
x %>%
mutate(currency = strsplit(.$financialVariable,"\n")[[1]][2])
})
dat %>% map(., function(x){
x %>%
mutate(currency = strsplit(.$financialVariable,"\\\n")[[1]][2])
})
dat %>% map(., function(x){
x %>%
mutate(currency = strsplit(.$financialVariable,"\\\n")[[1]][1])
})
dat %>% map(., function(x){
x %>%
mutate(currency = strsplit(.$financialVariable,"\\\n")[[2]][1])
})
dat %>% map(., function(x){
x %>%
mutate(currency = sub(".*/", "", .))
})
dat %>% map(., function(x){
x %>%
mutate(currency = sub(".*/", "", .$financialVariable))
})
dat <- list(company1 = structure(list(financialVariable = c("Ventas Cliente",
"Revenue\n\200", "Expenditure\n\200", "Profit (Loss)\n\200"),
`2019` = c("98716127", "987,161", "890,623", "96,538"), `2020` = c("1477902",
"1,477,902", "1,337,031", "140,871"), `2021` = c("1970536",
"1,970,536", "1,732,873", "237,663"), `2022` = c("2955805",
"2,955,805", "2,569,122", "386,683"), `2023` = c("4433708",
"4,433,708", "3,829,434", "604,274")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("Expenditure\n\200",
"Profit (Loss)\n\200", "Revenue\n\200", "Ventas Cliente"), .rows = structure(list(
3L, 4L, 2L, 1L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")), company11 = structure(list(financialVariable = c("B2C and B2B Sales",
"Revenue\nCHF", "Expenditure\nCHF", "Profit (Loss)\nCHF"), `2019` = c("2",
"69,000", "187,000", "-118,000"), `2020` = c("2", "170,000",
"556,000", "-386,000"), `2021` = c("2", "506,000", "1,102,000",
"-596,000"), `2022` = c("2", "1,269,000", "2,013,000", "-744,000"
), `2023` = c("2", "3,110,000", "3,761,000", "-651,000")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("B2C and B2B Sales",
"Expenditure\nCHF", "Profit (Loss)\nCHF", "Revenue\nCHF"), .rows = structure(list(
1L, 3L, 4L, 2L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")), company7 = structure(list(financialVariable = c("0",
"Revenue\nÂ£", "Expenditure\nÂ£", "Profit (Loss)\nÂ£"), `2019` = c("0",
"0", "0", "0"), `2020` = c("0", "0", "0", "0")), row.names = c(NA,
-4L), groups = structure(list(financialVariable = c("0", "Expenditure\nÂ£",
"Profit (Loss)\nÂ£", "Revenue\nÂ£"), .rows = structure(list(1L,
3L, 4L, 2L), ptype = integer(0), class = c("vctrs_list_of",
"vctrs_vctr", "list"))), row.names = c(NA, 4L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE), class = c("grouped_df",
"tbl_df", "tbl", "data.frame")))
dat %>% map(., function(x){
x %>%
mutate(currency = sub(".*\\", "", .$financialVariable))
})
dat %>% map(., function(x){
x %>%
mutate(currency = sub(".*\\\n", "", .$financialVariable))
})
dat %>% map(., function(x){
x %>%
mutate(currency = sub(".*\\n", "", .$financialVariable))
})
dat %>% map(., function(x){
x %>%
mutate(currency = strsplit(.$financialVariable,"\\\n")[[2]][2])
})
dat %>% map(., function(x){
x %>%
mutate(currency = str_extract(.$financialVariable,"\\\n"))
})
x %>%
mutate(currency = str_split(.$financialVariable,"\\\n"))
dat %>% map(., function(x){
x %>%
mutate(currency = str_split(.$financialVariable,"\\\n"))
})
dat %>% map(., function(x){
x %>%
mutate(currency = str_split(.$financialVariable,"\\\n")[[1]])
})
dat %>% map(., function(x){
x %>%
mutate(currency = str_split(.$financialVariable,"\\\n")[[2]][2])
})
styler:::style_selection()
dat %>%
mutate(currency = map(., function(x){
str_split(.$financialVariable, "\\\n")[[2]][2])
})
dat %>%
mutate(currency = map(., function(x){
mutate(currency = str_split(.$financialVariable, "\\\n")[[2]][2])
}))
dat %>%
mutate(currency = map(., function(x){
str_split(.$financialVariable, "\\\n")[[2]][2]
}))
dat %>% map(., function(x) {
x %>%
mutate(currency = str_split(.$financialVariable, "\\\n")[[2]][2])
})
dat$company1 %>% print(.$financialVariable)
dat$company1
dat$company1[,1]
dat$company1[,1][1]
dat$company1[,1][1,1]
dat %>% map(., function(x) {
x %>%
mutate(currency = str_split(.$financialVariable, "\\\n")[[2]][2])
})
dat %>%  map(.,  ~separate(.x, financialVariable, into = c("financialVariable", "Currency"), "\n"))
library(tidyverse)
occ_simulation <- function(nyears, lambda, alpha, beta){
data_matrix <- matrix(, nrow = nyears, ncol = 6)
for (z in 1:nyears){
data_matrix[z][1] <- z
}
for (yr in 1:nyears){
poisson_sim = rpois(1, lambda)
for (number_of_events in poisson_sim){
if (number_of_events == 1){
beta_sim = rbeta(1, alpha, beta)
data_matrix[yr, 2] <- beta_sim
} else if (number_of_events == 2){
for (i in 2:3){
beta_sim = rbeta(1, alpha, beta)
data_matrix[yr, i] <- beta_sim
}
} else if (number_of_events == 3){
for (i in 2:4){
beta_sim = rbeta(1, alpha, beta)
data_matrix[yr, i] <- beta_sim
}
} else if (number_of_events == 4){
for (i in 2:5){
beta_sim = rbeta(1, alpha, beta)
data_matrix[yr, i] <- beta_sim
}
} else{
for (i in 2:6){
beta_sim = rbeta(1, alpha, beta)
data_matrix[yr, i] <- beta_sim
}
}
}
}
sorted_matrix <- cbind(data_matrix[,1],t(apply(data_matrix[,2:6],1,function(x) sort(x))))
G <- sorted_matrix %>% as.data.frame %>%
pivot_longer(-V1) %>%
ggplot(aes(x=factor(V1),y=value,color=name,group=name))+
geom_point()+
labs(color='Column',x='Time (Years)', y ='Probability')+
theme_bw()
return(G)
}
manual = occ_simulation(10, 10, 2, 20)
manual
data_matrix <- matrix(, nrow = nyears, ncol = 6)
manual
dat <- matrix(round(runif(100)),10,10)
dat
dat <- matrix(round(runif(100)),10,10) %>%
as_tibble()
dat <- matrix(round(runif(100)),10,10) %>%
as_tibble(,.name_repair = "unique")
dat
dat %>%
mutate(rowsum = rowwise(sum))
dat %>%
mutate(rowsum = sum(contains("[a-z]")))
dat %>%
mutate(rowsum = sum(contains("[0-9")))
dat %>%
mutate(rowsum = sum(contains("[0-9]")))
dat %>%
rowwise() %>%
mutate(rsum = sum)
dat %>%
rowwise() %>%
mutate(rsum = sum(.))
dat %>%
rowwise() %>%
mutate(rsum = sum(names(.)))
dat %>%
rowwise() %>%
names(.)
dat %>%
rowwise() %>%
mutate(rsum = sum(!!!names(.)))
dat %>%
rowwise() %>%
mutate(rsum = sum(!!names(.)))
dat %>%
rowwise() %>%
mutate(rsum = sum(!!enquo(names(.))))
dat <- matrix(round(runif(100)),10,10) %>%
as_tibble(,.name_repair = "unique")
dat
dat %>%
rowwise() %>%
mutate(rsum = sum(enquo(names(.))))
dat %>%
rowwise() %>%
mutate(rsum = sum(enquo(!!names(.))))
dat %>%
rowwise() %>%
mutate(rsum = sum(!!enquo(names(.))))
dat %>%
rowwise() %>%
mutate(rsum = rowSums(.))
dat %>%
rowwise() %>%
mutate(rsum = rowSums(.[1:10]))
dat %>%
# rowwise() %>%
mutate(rsum = rowSums(.[1:10]))
dat %>%
mutate(rsum = rowSums(.))
dat %>%
mutate(rsum = rowSums(.)) %>%
filter(rsum >=2)
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_one = sum(rsum<2)/n())
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = sum(rsum<2)/n(),
more_than_two = sum(rsum>=2)/n())
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = sum(rsum<4)/n(),
more_than_two = sum(rsum>=4)/n())
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<5)/n(),
more_than_two = 100*sum(rsum>=5)/n())
dat <- matrix(ifelse(runif(100)>=0.1, 1,0),10,10) %>%
as_tibble(,.name_repair = "unique")
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<5)/n(),
more_than_two = 100*sum(rsum>=5)/n())
dat
dat <- matrix(ifelse(runif(100)>=0.1,0,1),10,10) %>%
as_tibble(,.name_repair = "unique")
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<5)/n(),
more_than_two = 100*sum(rsum>=5)/n())
dat
dat <- matrix(ifelse(runif(100)>=0.1,0,1),10,10) %>%
as_tibble(,.name_repair = "unique")
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<2)/n(),
more_than_two = 100*sum(rsum>=2)/n())
dat
dat <- matrix(ifelse(runif(100)>=0.1,0,1),10,10) %>%
as_tibble(,.name_repair = "unique")
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<2)/n(),
more_than_two = 100*sum(rsum>=2)/n())
set.seed(1234)
dat <- matrix(ifelse(runif(100)>=0.1,0,1),10,10) %>%
as_tibble(,.name_repair = "unique")
dat %>%
mutate(rsum = rowSums(.)) %>%
summarise(fewer_than_two = 100*sum(rsum<2)/n(),
more_than_two = 100*sum(rsum>=2)/n())
dat
library(rPALM)
