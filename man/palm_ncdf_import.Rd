% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palm_import_static.R
\name{palm_ncdf_import}
\alias{palm_ncdf_import}
\title{R6-Class to import data from an already existing static driver}
\description{
R6-Class to import data from an already existing static driver

R6-Class to import data from an already existing static driver
}
\examples{

## ------------------------------------------------
## Method `palm_ncdf_import$new`
## ------------------------------------------------

import_static <- palm_ncdf_import$new("new_static_driver.nc",
                                      "Path/to/files", "old_static_driver.nc", F)
import_static$read_static()
}
\section{Super class}{
\code{\link[rPALM:palm_ncdf_berlin]{rPALM::palm_ncdf_berlin}} -> \code{palm_ncdf_import}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{palm_ncdf_import$new()}}
\item \href{#method-importfiles}{\code{palm_ncdf_import$importfiles()}}
\item \href{#method-read_static}{\code{palm_ncdf_import$read_static()}}
\item \href{#method-clone}{\code{palm_ncdf_import$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="SortOverlayingdata">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-SortOverlayingdata}{\code{rPALM::palm_ncdf_berlin$SortOverlayingdata()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_R6_data">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_R6_data}{\code{rPALM::palm_ncdf_berlin$add_R6_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_R6_dim">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_R6_dim}{\code{rPALM::palm_ncdf_berlin$add_R6_dim()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_any2D_variable">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_any2D_variable}{\code{rPALM::palm_ncdf_berlin$add_any2D_variable()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_lod2_variable">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_lod2_variable}{\code{rPALM::palm_ncdf_berlin$add_lod2_variable()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_simple_surfacefraction">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_simple_surfacefraction}{\code{rPALM::palm_ncdf_berlin$add_simple_surfacefraction()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="add_soil">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-add_soil}{\code{rPALM::palm_ncdf_berlin$add_soil()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="addsoilandsurfacefraction">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-addsoilandsurfacefraction}{\code{rPALM::palm_ncdf_berlin$addsoilandsurfacefraction()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="correct_surface_fraction">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-correct_surface_fraction}{\code{rPALM::palm_ncdf_berlin$correct_surface_fraction()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="countemptyfields">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-countemptyfields}{\code{rPALM::palm_ncdf_berlin$countemptyfields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="createbuilding3D">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-createbuilding3D}{\code{rPALM::palm_ncdf_berlin$createbuilding3D()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="cutout_static">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-cutout_static}{\code{rPALM::palm_ncdf_berlin$cutout_static()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="downscale_resolution">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-downscale_resolution}{\code{rPALM::palm_ncdf_berlin$downscale_resolution()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="exportncdf">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-exportncdf}{\code{rPALM::palm_ncdf_berlin$exportncdf()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="fill_areal">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-fill_areal}{\code{rPALM::palm_ncdf_berlin$fill_areal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="generate_lad_patch">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-generate_lad_patch}{\code{rPALM::palm_ncdf_berlin$generate_lad_patch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="generate_lad_single_trees">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-generate_lad_single_trees}{\code{rPALM::palm_ncdf_berlin$generate_lad_single_trees()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="generate_lai_array">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-generate_lai_array}{\code{rPALM::palm_ncdf_berlin$generate_lai_array()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="import_data">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-import_data}{\code{rPALM::palm_ncdf_berlin$import_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="plot_area">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-plot_area}{\code{rPALM::palm_ncdf_berlin$plot_area()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="print">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-print}{\code{rPALM::palm_ncdf_berlin$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rPALM" data-topic="palm_ncdf_berlin" data-id="quickplot">}\href{../../rPALM/html/palm_ncdf_berlin.html#method-quickplot}{\code{rPALM::palm_ncdf_berlin$quickplot()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{palm_ncdf_import$new(newfilename, pathtofiles, oldfilename, oldversion = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{newfilename}}{Character. Filename for the future static driver}

\item{\code{pathtofiles}}{Character. Path where the old static driver lies}

\item{\code{oldfilename}}{Character. Name of the old static driver}

\item{\code{oldversion}}{Logical. Only use TRUE for PALM versions <2900}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The initialize/new function creates a barebones class with references to the static driver.
To import the data of the static file, read_static() has to be called afterwards
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{import_static <- palm_ncdf_import$new("new_static_driver.nc",
                                      "Path/to/files", "old_static_driver.nc", F)
import_static$read_static()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importfiles"></a>}}
\if{latex}{\out{\hypertarget{method-importfiles}{}}}
\subsection{Method \code{importfiles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{palm_ncdf_import$importfiles(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_static"></a>}}
\if{latex}{\out{\hypertarget{method-read_static}{}}}
\subsection{Method \code{read_static()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{palm_ncdf_import$read_static(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{palm_ncdf_import$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
